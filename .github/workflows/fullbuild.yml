name: "Build"

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    name: Full Build
    runs-on: ubuntu-latest
    container: node:latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_DB: taggtimeline
          POSTGRES_PASSWORD: timeline
          POSTGRES_PORT: 5432
          POSTGRES_USER: taggserver
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    
    steps:
    - uses: actions/checkout@v3
    - name: "Server: Setup .NET"
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x
    - uses: microsoft/variable-substitution@v1
      with:
        files: '**/appsettings.json'
      env:
        DatabaseConfiguration.ConnectionString: "User ID=taggserver;Password=timeline;Host=postgres;Port=5432;Database=taggtimeline;"
        ConnectionString: "User ID=taggserver;Password=timeline;Host=postgres;Port=5432;Database=taggtimeline;"
        DatabaseMigrationsEnabled: "true"
        OverrideWebapiConnectionString: "false"
    
    - name: "Server: Restore dependencies"
      run: dotnet restore
    - name: "Server: Build"
      run: dotnet build --no-restore
    - name: "Server: Test"
      run: dotnet test --no-build --verbosity normal

    - name: "Client: Install Node modules"
      working-directory: ./TaggTimeline.WebClient
      run: npm i
    - name: "Client: Lint"
      working-directory: ./TaggTimeline.WebClient
      run: npm run lint
    - name: "Client: Build"
      working-directory: ./TaggTimeline.WebClient
      run: npm run build
